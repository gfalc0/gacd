g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+abline(slope=0,intercept=mean(mpg[mtcars$am==0]))
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]))
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]))
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=3)
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==1]),color=3)
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=factor(am),linetype=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==1]),color=factor(am),linetype=2)
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=factor(mtcars$am),linetype=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==1]),color=factor(mtcars$am),linetype=2)
g2
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=2,linetype=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==1]),color=1,linetype=2)
g2
```{r}
fit1 <- lm(data=mtcars,mpg ~ qsec+wt+factor(am))
coef(summary(fit1))
```
plot(fit1)
fit2 <- lm(data=mtcars,mpg ~ qsec * factor(am)+wt*factor(am))
summary(fit2)
plot(fit2)
g <- ggplot(data=mtcars, aes(y=mpg, x=wt, colour=factor(am)))
g <-g + geom_point()
g
g <- ggplot(data=mtcars, aes(y=mpg, x=qsec, colour=factor(am)))
g <-g + geom_point()
g <-g + geom_abline(intercept=coef(fit2)[1],slope=coef(fit2)[2],size=2,color=2)
g <- g + geom_abline(intercept=coef(fit2)[1]+coef(fit2)[3],slope=coef(fit2)[2]+coef(fit2)[4],size=2,color="cyan")
g
g <- ggplot(data=mtcars, aes(y=mpg, x=qsec, colour=factor(am)))
g <-g + geom_point()
g <-g + geom_abline(intercept=coef(fit2)[1],slope=coef(fit2)[2],size=2,color=2)
g <- g + geom_abline(intercept=coef(fit2)[1]+coef(fit2)[3],slope=coef(fit2)[2]+coef(fit2)[5],size=2,color="cyan")
g
g
fit2$coefficients
coef(fit2)[1]
fit2 <- lm(data=mtcars,mpg ~ qsec * factor(am)+wt*factor(am))
g <- ggplot(data=mtcars, aes(y=mpg, x=qsec, colour=factor(am)))
g <-g + geom_point()
g <-g + geom_abline(intercept=coef(fit2)[1],slope=coef(fit2)[2],size=2,color=2)
g <- g + geom_abline(intercept=coef(fit2)[1]+coef(fit2)[3],slope=coef(fit2)[2]+coef(fit2)[5],size=2,color="cyan")
g
g <- ggplot(data=mtcars, aes(y=mpg, x=qsec, colour=factor(am)))
g <-g + geom_point()
g
g <-g + geom_abline(intercept=coef(fit2)[1],slope=coef(fit2)[2],size=2,color=2)
g
g <- ggplot(data=mtcars, aes(y=mpg, x=qsec, colour=factor(am)))
g <-g + geom_point()
g <- g + geom_abline(intercept=coef(fit2)[1]+coef(fit2)[3],slope=coef(fit2)[2]+coef(fit2)[5],size=2,color="cyan")
g
```{r}
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=2,linetype=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==1]),color=1,linetype=2)
g2
```{r violini,echo=FALSE,fig.cap="Distributions of mpg wrt am""}
fit2 <- lm(data=mtcars,mpg ~ qsec * factor(am))
library(car)
fit <- lm(data=mtcars,mpg ~ .)
vif(fit)
library(car)
install.packages(car)
install.packages("car")
library(car)
vif(fit)
order(vif(fit))
vif(fit)[order(vif(fit))]
?anova
library(ggplot2)
library(car)
fit <- lm(data=mtcars,mpg ~ .)
fit2 <- lm(data=mtcars,mpg ~ qsec * factor(am))
fit3 <- lm(data=mtcars,mpg ~ qsec * factor(am)+wt*factor(am))
anova(fit2,fit3,fit)
anova(fit2,fit)
anova(fit2,fit3)
fit0 <- lm(data=mtcars,mpg~factor(cyl)+wt)
summary(fit0)
fit0 <- lm(data=mtcars,mpg~factor(am)+wt)
summary(fit0)
cyl
fit0 <- lm(data=mtcars,mpg~wt+cyl)
summary(fit0)
fit0 <- lm(data=mtcars,mpg~wt+factor(cyl))
summary(fit0)
mtcars$cyl
fit0 <- lm(data=mtcars,mpg~factor(cyl))
summary(fit0)
fit0 <- lm(data=mtcars,mpg~factor(cyl)+wt)
summary(fit0)
fit0 <- lm(data=mtcars,mpg~factor(cyl)*wt)
summary(fit0)
fit01 <- lm(data=mtcars,mpg~factor(cyl) + wt)
anova(fit01,fit0)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
hatvalues(lm(y~x))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbeta(lm(y~x))
dfbetas(lm(y~x))
rm(list=ls())
library(ggplot2)
library(car)
fit2 <- lm(data=mtcars,mpg ~ qsec * factor(am))
fit3 <- lm(data=mtcars,mpg ~ qsec * factor(am)+wt*factor(am))
anova(fit2,fit3)
fit2 <- lm(data=mtcars,mpg ~ qsec * factor(am))
plot(fit2)
g <- ggplot(data=mtcars, aes(y=mpg, x=qsec, colour=factor(am)))
g <-g + geom_point()
g <-g + geom_abline(intercept=coef(fit2)[1],slope=coef(fit2)[2],
size=2,color=2)
g <- g + geom_abline(intercept=coef(fit2)[1]+
coef(fit2)[3],slope=coef(fit2)[2]+
coef(fit2)[4],size=2,color="cyan")
g
g2 <- ggplot(data=mtcars, aes(y=mpg, x=factor(am),fill=factor(am))) + geom_boxplot()+geom_violin(alpha=0.5)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==0]),color=2,linetype=2)+geom_abline(slope=0,intercept=mean(mtcars$mpg[mtcars$am==1]),color=1,linetype=2)
g2
library(MASS)
?shuttle
logshu <- glm(data = shuttle, use ~ wind)
logshu <- glm(data = shuttle, use ~ wind,family="binomial")
logshu
summary logshu
summary(logshu)
plot(shuttle$wind,logshu$fitted.values)
logshu$fitted.values
unique(logshu$fitted.values)
0.4375/(1-0.4375)
0.4297/(1-0.4297)
0.7778/0.7535
1/1.03225
logshu2 <- glm(data = shuttle, use ~ wind + magn,family="binomial")
plot(shuttle$wind,logshu2$fitted.values)
logshu2$fitted.values
plot(shuttle$magn,logshu2$fitted.values)
plot(shuttle$wind,logshu2$fitted.values)
logshu <- glm(data = shuttle, use ~ wind,family="binomial")
library(MASS)
logshu <- glm(data = shuttle, use ~ wind,family="binomial")
logshu2 <- glm(data = shuttle, use ~ wind + magn,family="binomial")
summary(logshu2)
unique(logshu2$fitted.values)
unique(logshu1$fitted.values)
unique(logshu$fitted.values)
?InsectSprays
glmi <- glm(data=InsectSprays,count ~ factor(spray),family="Poisson")
glmi <- glm(data=InsectSprays,count ~ factor(spray),family="poisson")
summary(glmi)
?seq
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","d:/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","d:\")
)
;
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "~/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "d:\")
l
o
k
i
\
)
pippo.csv
""
)
q
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "d:\datas.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "~/datas.csv")
load("~/datas.csv")
pippo <- read.csv("~/datas.csv")
pippo(pippo$VAL==24)
pippo[pippo$VAL==24]
pippo[,pippo$VAL==24]
pippo[pippo$VAL==24,]
pippo2 <- pippo[pippo$VAL==24,]
head(pippo2)
pippo$VAL
pippo2 <- pippo$VAL
unique(pippo2)
pippo2[pippo2==24]
pippo2[!is.na(pippo2)]
pippo2[!is.na(pippo2) & pippo2==24]
length(pippo2[!is.na(pippo2) & pippo2==24])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "~\")
datas2.xlsx"
)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "~\datas2.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "~/datas2.xlsx")
library(xlsx)
install.packages(xlsx)
"xlsx"
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(xlsxjars)
install.packages("rjava")
install.packages("rJava")
library(xlsx)
require(xlsx)
install.packages("gdata")
library(gdata)
installXLSXsupport()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",destfile = "~/datas3.xml")
install.packages("xml")
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "~/dataz.csv")
tab0 <- read.csv("~/dataz.csv")
head(tab0)
agricultureLogical <- (tab0$ACR==3) & (tab0$AGS==6)
head(tab0$ACR)
head(tab0$AGS)
which(agricultureLogical)
requires("jpeg")
require("jpeg")
install.packages("jpeg")
library(jpeg)
?jpeg
library(jpeg)
jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "~/jleek.jpg")
jpeg("~/jleek.jpg")
pippo <- jpeg("~/jleek.jpg")
?readJPEG
readJPEG("~/jleek.jpg",native=TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "~/jleek1.jpg")
readJPEG("~/jleek1.jpg",native=TRUE)
pippo <-readJPEG("~/jleek1.jpg",native=TRUE)
pippo <- readJPEG("~/jleek1.jpg",native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "~/jleek2.jpg")
pippo <- readJPEG("~/jleek2.jpg",native=TRUE)
pippo
str(pippo)
summary(pippo)
??quantile
?quantile
quantile(pippo)
quantile(pippo,c[0,50,80])
quantile(pippo,seq(0,1,0.1))
quantile(pippo,seq(0,1,0.1),na.rm=TRUE)
head(pippo)
pippo
pippo <- readJPEG("~/jleek2.jpg",native=TRUE)
quantile(pippo,seq(0,1,0.1),na.rm=TRUE)
pippo <- readJPEG("~/getdata-jeff.jpg",native=TRUE)
pippo
quantile(pippo,seq(0,1,0.1),na.rm=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","~/gdps.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","~/edus.csv")
gdps <- read.csv("~/gdps")
gdps <- read.csv("~/gdps.csv")
eduss <- read.csv("~/edus.csv")
View(eduss)
View(gdps)
require("dplyr")
install.packages("dplyr")
library(dplyr)
?rbind_list
uny<- bind_cols(gdps,eduss)
View(gdps)
uny <- merge(gdps,eduss,by.x = "X",by.y = "CountryCode" )
View(uny)
View(uny)
View(uny)
uny$Gross.domestic.product.2012[uny$Gross.domestic.product.2012>0]
uny$Gross.domestic.product.2012[uny$Gross.domestic.product.2012!=""]
uny$Gross.domestic.product.2012[uny$Gross.domestic.product.2012==" "]
uny$Gross.domestic.product.2012[uny$Gross.domestic.product.2012==""]
uny$Gross.domestic.product.2012
dui <- uny[uny$Gross.domestic.product.2012!=" ",]
View(dui)
dui <- uny[uny$Gross.domestic.product.2012!="",]
View(dui)
trei <- arrange(dui,desc(Gross.domestic.product))
trei <- arrange(dui,desc(Gross.domestic.product.2012))
View(trei)
trei <- arrange(dui,desc(as.double(Gross.domestic.product.2012))
)
View(trei)
trei <- arrange(dui,desc(as.integer(Gross.domestic.product.2012))
)
trei <- arrange(dui,desc(as.integer(Gross.domestic.product.2012)))
View(trei)
trei$Gross.domestic.product.2012 <- as.integer(trei$Gross.domestic.product.2012)
trei <- arrange(dui,desc(Gross.domestic.product.2012))
View(trei)
?arrange
?desc
dui <- arrange(dui,desc(as.integer(Gross.domestic.product.2012)))
dui
dui$Gross.domestic.product.2012 <- as.integer(dui$Gross.domestic.product.2012)
trei <- arrange(dui,desc(Gross.domestic.product.2012))
dui <- uny[uny$Gross.domestic.product.2012!=" ",]
dui$Gross.domestic.product.2012 <- as.integer(dui$Gross.domestic.product.2012)
trei <- arrange(dui,desc(Gross.domestic.product.2012))
View(trei)
View(uny)
dui <- uny[uny$Gross.domestic.product.2012!="",]
dui$Gross.domestic.product.2012 <- as.integer(dui$Gross.domestic.product.2012)
trei <- arrange(dui,desc(Gross.domestic.product.2012))
View(trei)
View(dui)
View(uny)
dui <- uny[uny$Gross.domestic.product.2012!="",]
View(dui)
dui$Gross.domestic.product.2012 <- as.integer(dui$Gross.domestic.product.2012)
View(dui)
dui <- uny[uny$Gross.domestic.product.2012!="",]
dui$Gross.domestic.product.2012 <- as.double(dui$Gross.domestic.product.2012)
View(dui)
dui <- uny[uny$Gross.domestic.product.2012!="",]
trei <- arrange(dui,desc(Gross.domestic.product.2012))
View(trei)
gdps <- read.csv("~/gdps.csv")
eduss <- read.csv("~/edus.csv")
uny <- merge(gdps,eduss,by.x = "X",by.y = "CountryCode" )
View(uny)
unyhio <- uny[uny$Income.Group=="High income: OECD",]
View(unyhio)
mean(unyhio$Gross.domestic.product.2012)
mean(factor(unyhio$Gross.domestic.product.2012))
factor(3)
factor(unyhio$Gross.domestic.product.2012)
as.numeric(factor(unyhio$Gross.domestic.product.2012))
as.numeric(levels(unyhio$Gross.domestic.product.2012))
as.numeric(levels(unyhio$Gross.domestic.product.2012))[1]
levels(unyhio$Gross.domestic.product.2012)
levels(unyhio$Gross.domestic.product.2012)
unyhio$Gross.domestic.product.2012
levels(unyhio$Gross.domestic.product.2012)[unyhio$Gross.domestic.product.2012]
mean(as.numeric(levels(unyhio$Gross.domestic.product.2012)[unyhio$Gross.domestic.product.2012])
)
unyno <- uny[,uny$Income.Group=="High income: nonOECD"]
unyno <- uny[,uny$Income.Group=="High income: nonOECD"]
unyno <- uny[uny$Income.Group=="High income: nonOECD",]
unyno
mean(as.numeric(levels(unyno$Gross.domestic.product.2012)[unyno$Gross.domestic.product.2012])
)
mean(as.numeric(levels(unyno$Gross.domestic.product.2012)[unyno$Gross.domestic.product.2012],na.rm=TRUE)
)
mean(as.numeric(levels(unyno$Gross.domestic.product.2012)[unyno$Gross.domestic.product.2012])
)
as.numeric(levels(unyno$Gross.domestic.product.2012)[unyno$Gross.domestic.product.2012])
as.numeric(levels(unyno$Gross.domestic.product.2012)[unyno$Gross.domestic.product.2012],na.rm=TRUE)
?mean
mean(as.numeric(levels(unyno$Gross.domestic.product.2012)[unyno$Gross.domestic.product.2012]),na.rm = TRUE)
uny[(uny$Gross.domestic.product.2012<=38)&(uny$Income.Group=="Lower middle income"),]
uny[(as.numeric(levels(uny$Gross.domestic.product.2012)[uny$Gross.domestic.product.2012])<=38)&(uny$Income.Group=="Lower middle income"),]
ub <- uny[(as.numeric(levels(uny$Gross.domestic.product.2012)[uny$Gross.domestic.product.2012])<=38)&(uny$Income.Group=="Lower middle income"),]
View(ub)
ub <- uny[(as.numeric(levels(uny$Gross.domestic.product.2012)[uny$Gross.domestic.product.2012],na.rm=TRUE)<=38)&(uny$Income.Group=="Lower middle income"),]
View(ub)
install.packages("caret")
library(caret)
read.csv("~/dats.csv")
dat <- read.csv("~/dats.csv")
View(dat)
names(dat)
?strsplit
pio <- strsplit(names(dat),"wgtp")
pio
pio[123]
pio[[123]]
pio
gdp <- read.csv("~/gdp.csv")
View(gdp)
sub(",","",gdp$X.3)
View(gdp)
mean(sub(",","",gdp$X.3))
mean(sub(",","",gdp$X.3),na.rm = TRUE)
mean(sub(",","",as.numeric(gdp$X.3),na.rm = TRUE)
)
mean(sub(",","",as.numeric(gdp$X.3,na.rm = TRUE))
)
mean(sub(",","",as.numeric(gdp$X.3),na.rm = TRUE))
mean(sub(",","",as.numeric(gdp$X.3)),na.rm = TRUE)
mean(sub(",","",as.numeric(gdp$X.3)))
pip <-sub(",","",as.numeric(gdp$X.3)))
pip <-sub(",","",as.numeric(gdp$X.3))
pip
pip <-sub(",","",gdp$X.3)
pip
pup <- as.numeric(levels(pip)[pip])
pup
pup <- as.numeric(levels(pip)[pip])
pup
levels[pip]
levels(pip)
as.numeric(pip)
mean(as.numeric(pip),na.rm = TRUE)
pio
pip <- sub(",","",gdp$X.3)
pip
pup <- as.numeric(pip)
pup
pip <- sub(",","",pip)
pip
pup <- as.numeric(pip)
pup
mean(pup,na.rm = TRUE)
mean(pup[1..190],na.rm = TRUE)
mean(pup[seq(1,1,190)],na.rm = TRUE)
mean(pup[seq(1,190)],na.rm = TRUE)
countryNames <- gdp$X.2
grep("^United",countryNames)
grep("United$",countryNames)
grep("*United",countryNames)
?grep
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
sampleTimes <- index(amzn)
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
sampletimes
sampleTimes
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
do.call(rbind, lapply(split(sampleTimes, substring(sampleTimes, 1, 4)), function(x) {
table(weekdays(x))
}))
51+47+50+51+51
setwd("~/gacd/")
training = read.csv("UCI HAR Dataset/train/X_train.txt", sep="", header=FALSE)
training[,562] = read.csv("UCI HAR Dataset/train/Y_train.txt", sep="", header=FALSE)
training[,563] = read.csv("UCI HAR Dataset/train/subject_train.txt", sep="", header=FALSE)
testing = read.csv("UCI HAR Dataset/test/X_test.txt", sep="", header=FALSE)
testing[,562] = read.csv("UCI HAR Dataset/test/Y_test.txt", sep="", header=FALSE)
testing[,563] = read.csv("UCI HAR Dataset/test/subject_test.txt", sep="", header=FALSE)
activities = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
features = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
features[,2] = gsub('-std', 'Std', features[,2])
features[,2] = gsub('[-()]', '', features[,2])
allData = rbind(training, testing)
cols <- grep(".*Mean.*|.*Std.*", features[,2])
cols <- c(cols, 562, 563)
cols <- c(cols, 562, 563)
allData <- allData[,cols]
colnames(allData) <- c(features$V2, "Activity", "Subject")
colnames(allData) <- c(features$V2, "Activity", "Subject")
colnames(allData) <- tolower(colnames(allData))
currentActivity = 1
for (currentActivityLabel in activityLabels$V2) {
allData$activity <- gsub(currentActivity, currentActivityLabel, allData$activity)
currentActivity <- currentActivity + 1
}
allData$activity <- as.factor(allData$activity)
allData$subject <- as.factor(allData$subject)
tidy = aggregate(allData, by=list(activity = allData$activity, subject=allData$subject), mean)
# Remove the subject and activity column, since a mean of those has no use
tidy[,90] = NULL
tidy[,89] = NULL
write.table(tidy, "tidy.txt", sep="\t")
for (currentActivityLabel in activityLabels$V2) {
allData$activity <- gsub(currentActivity, currentActivityLabel, allData$activity)
currentActivity <- currentActivity + 1
}
for (currentActivityLabel in activities$V2) {
allData$activity <- gsub(currentActivity, currentActivityLabel, allData$activity)
currentActivity <- currentActivity + 1
}
View(allData)
cols <- grep(".*Mean.*|.*Std.*", features[,2])
# First reduce the features table to what we want
features <- features[cols,]
# add the columns "subject" "activity"
cols <- c(cols, 562, 563)
# remove unwanted columns from allData
allData <- allData[,cols]
allData = rbind(training, testing)
# Get only the data on mean and std. dev.
cols <- grep(".*Mean.*|.*Std.*", features[,2])
# First reduce the features table to what we want
features <- features[cols,]
# add the columns "subject" "activity"
cols <- c(cols, 562, 563)
# remove unwanted columns from allData
allData <- allData[,cols]
# Add the features names to allData
colnames(allData) <- c(features$V2, "Activity", "Subject")
colnames(allData) <- tolower(colnames(allData))
currentActivity = 1
for (currentActivityLabel in activities$V2) {
allData$activity <- gsub(currentActivity, currentActivityLabel, allData$activity)
currentActivity <- currentActivity + 1
}
allData$activity <- as.factor(allData$activity)
allData$subject <- as.factor(allData$subject)
tidy = aggregate(allData, by=list(activity = allData$activity, subject=allData$subject), mean)
# Remove the subject and activity column, since a mean of those has no use
tidy[,90] = NULL
tidy[,89] = NULL
write.table(tidy, "tidy.txt", sep="\t")
allData$activity <- as.factor(allData$activity)
allData$subject <- as.factor(allData$subject)
tidy = aggregate(allData, by=list(activity = allData$activity, subject=allData$subject), mean)
# Remove the subject and activity column, since a mean of those has no use
tidy[,90] = NULL
tidy[,89] = NULL
write.table(tidy, "tidy.txt", sep="\t")
